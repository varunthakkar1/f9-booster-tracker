{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\12039\\\\Desktop\\\\gitprojects\\\\f9-booster-tracker\\\\frontend\\\\src\\\\components\\\\modals\\\\EditBoosterModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport styled from 'styled-components';\nimport { ModalButton } from '../styled/ModalButton';\nimport { ModalInput } from '../styled/ModalInput';\nimport { modalStyle } from '../../styles/modalStyle';\nconst ModalContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  width: 400px;\n`;\n_c = ModalContainer;\nconst ModalTitle = styled.div`\n  display: flex;\n  justify-content: left;\n  font-size: 30px;\n  font-weight: bolder;\n  width: 90%;\n  margin: 1rem 1rem;\n`;\n_c2 = ModalTitle;\nconst ModalForm = styled.form`\n  display: flex;\n  align-items: left;\n  justify-content: center;\n  flex-direction: column;\n  width: 95%;\n`;\n_c3 = ModalForm;\nconst ModalFormLabel = styled.label`\n  width: 80%;\n  display: flex;\n  justify-content: left;\n  margin: 0rem 1rem;\n  font-weight: bold;\n`;\n_c4 = ModalFormLabel;\nconst StatusText = styled.div`\n  display: flex;\n  justify-content: center;\n  font-size: 20px;\n  font-weight: bold;\n  width: 90%;\n  color: green;\n  margin: 1rem 0rem;\n`;\n_c5 = StatusText;\nconst ButtonGroupWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  width: 80%;\n  margin-top: 1rem;\n`;\n_c6 = ButtonGroupWrapper;\n\nconst EditBoosterModal = ({\n  booster,\n  isOpen,\n  onClose\n}) => {\n  _s();\n\n  const [boosterName, setBoosterName] = useState(booster.boosterName);\n  const [description, setDescription] = useState(booster.description);\n  const [imageSrc, setImageSrc] = useState(booster.imageSrc);\n  const [imageCaption, setImageCaption] = useState(booster.imageCaption);\n  const [completedRequest, setCompletedRequest] = useState(false);\n\n  const updateBooster = async e => {\n    e.preventDefault();\n\n    try {\n      const body = {\n        boosterName,\n        description,\n        imageSrc,\n        imageCaption\n      };\n      const response = await fetch('http://localhost:5001/boosters/' + booster.boosterId, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n      response.status === 200 ? setCompletedRequest(true) : setCompletedRequest(false);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    style: modalStyle,\n    ariaHideApp: false,\n    children: /*#__PURE__*/_jsxDEV(ModalContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ModalTitle, {\n        children: \"Edit Booster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalForm, {\n        children: [/*#__PURE__*/_jsxDEV(ModalFormLabel, {\n          children: \"Booster Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalInput, {\n          value: boosterName,\n          onChange: e => setBoosterName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFormLabel, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalInput, {\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFormLabel, {\n          children: \"Image Source\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalInput, {\n          value: imageSrc,\n          onChange: e => setImageSrc(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFormLabel, {\n          children: \"Image Caption\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalInput, {\n          value: imageCaption,\n          onChange: e => setImageCaption(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), completedRequest ? /*#__PURE__*/_jsxDEV(StatusText, {\n        children: \"Updated Booster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }, this) : null, /*#__PURE__*/_jsxDEV(ButtonGroupWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(ModalButton, {\n          onClick: e => updateBooster(e),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalButton, {\n          onClick: onClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditBoosterModal, \"Yfxqapki8UwMWatNXrj7uB9ZQ1Q=\");\n\n_c7 = EditBoosterModal;\nexport default EditBoosterModal;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"ModalContainer\");\n$RefreshReg$(_c2, \"ModalTitle\");\n$RefreshReg$(_c3, \"ModalForm\");\n$RefreshReg$(_c4, \"ModalFormLabel\");\n$RefreshReg$(_c5, \"StatusText\");\n$RefreshReg$(_c6, \"ButtonGroupWrapper\");\n$RefreshReg$(_c7, \"EditBoosterModal\");","map":{"version":3,"sources":["C:/Users/12039/Desktop/gitprojects/f9-booster-tracker/frontend/src/components/modals/EditBoosterModal.tsx"],"names":["React","useState","Modal","styled","ModalButton","ModalInput","modalStyle","ModalContainer","div","ModalTitle","ModalForm","form","ModalFormLabel","label","StatusText","ButtonGroupWrapper","EditBoosterModal","booster","isOpen","onClose","boosterName","setBoosterName","description","setDescription","imageSrc","setImageSrc","imageCaption","setImageCaption","completedRequest","setCompletedRequest","updateBooster","e","preventDefault","body","response","fetch","boosterId","method","headers","JSON","stringify","status","error","console","message","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Booster } from '../../model/Booster'\nimport Modal from 'react-modal'\nimport styled from 'styled-components'\nimport { ModalButton } from '../styled/ModalButton'\nimport { ModalInput } from '../styled/ModalInput'\nimport { modalStyle } from '../../styles/modalStyle'\n\ninterface EditBoosterModalProps {\n  booster: Booster\n  isOpen: boolean\n  onClose: () => void\n}\n\nconst ModalContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  width: 400px;\n`\n\nconst ModalTitle = styled.div`\n  display: flex;\n  justify-content: left;\n  font-size: 30px;\n  font-weight: bolder;\n  width: 90%;\n  margin: 1rem 1rem;\n`\n\nconst ModalForm = styled.form`\n  display: flex;\n  align-items: left;\n  justify-content: center;\n  flex-direction: column;\n  width: 95%;\n`\n\nconst ModalFormLabel = styled.label`\n  width: 80%;\n  display: flex;\n  justify-content: left;\n  margin: 0rem 1rem;\n  font-weight: bold;\n`\n\nconst StatusText = styled.div`\n  display: flex;\n  justify-content: center;\n  font-size: 20px;\n  font-weight: bold;\n  width: 90%;\n  color: green;\n  margin: 1rem 0rem;\n`\n\nconst ButtonGroupWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  width: 80%;\n  margin-top: 1rem;\n`\n\nconst EditBoosterModal: React.FC<EditBoosterModalProps> = ({\n  booster,\n  isOpen,\n  onClose,\n}) => {\n  const [boosterName, setBoosterName] = useState<string>(booster.boosterName)\n  const [description, setDescription] = useState<string>(booster.description)\n  const [imageSrc, setImageSrc] = useState<string>(booster.imageSrc)\n  const [imageCaption, setImageCaption] = useState<string>(booster.imageCaption)\n  const [completedRequest, setCompletedRequest] = useState<boolean>(false)\n\n  const updateBooster = async (e: any) => {\n    e.preventDefault()\n    try {\n      const body = { boosterName, description, imageSrc, imageCaption }\n      const response = await fetch(\n        'http://localhost:5001/boosters/' + booster.boosterId,\n        {\n          method: 'PUT',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(body),\n        }\n      )\n      response.status === 200\n        ? setCompletedRequest(true)\n        : setCompletedRequest(false)\n    } catch (error) {\n      console.error(error.message)\n    }\n  }\n\n  return (\n    <Modal isOpen={isOpen} style={modalStyle} ariaHideApp={false}>\n      <ModalContainer>\n        <ModalTitle>Edit Booster</ModalTitle>\n        <ModalForm>\n          <ModalFormLabel>Booster Name</ModalFormLabel>\n          <ModalInput\n            value={boosterName}\n            onChange={(e) => setBoosterName(e.target.value)}\n          />\n          <ModalFormLabel>Description</ModalFormLabel>\n          <ModalInput\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n          />\n          <ModalFormLabel>Image Source</ModalFormLabel>\n          <ModalInput\n            value={imageSrc}\n            onChange={(e) => setImageSrc(e.target.value)}\n          />\n          <ModalFormLabel>Image Caption</ModalFormLabel>\n          <ModalInput\n            value={imageCaption}\n            onChange={(e) => setImageCaption(e.target.value)}\n          />\n        </ModalForm>\n        {completedRequest ? <StatusText>Updated Booster</StatusText> : null}\n        <ButtonGroupWrapper>\n          <ModalButton onClick={(e) => updateBooster(e)}>Update</ModalButton>\n          <ModalButton onClick={onClose}>Close</ModalButton>\n        </ButtonGroupWrapper>\n      </ModalContainer>\n    </Modal>\n  )\n}\n\nexport default EditBoosterModal\n"]},"metadata":{},"sourceType":"module"}