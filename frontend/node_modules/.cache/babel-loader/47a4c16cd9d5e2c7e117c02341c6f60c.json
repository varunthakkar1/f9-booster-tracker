{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\12039\\\\Desktop\\\\gitprojects\\\\f9-booster-tracker\\\\frontend\\\\src\\\\components\\\\modals\\\\EditMissionModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Modal from 'react-modal';\nimport moment from 'moment';\nimport { ModalButton } from '../styled/ModalButton';\nimport { ModalInput } from '../styled/ModalInput';\nimport { modalStyle } from '../../styles/modalStyle';\nconst ModalContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  width: 400px;\n`;\n_c = ModalContainer;\nconst ModalTitle = styled.div`\n  display: flex;\n  justify-content: left;\n  font-size: 30px;\n  font-weight: bolder;\n  width: 90%;\n  margin: 1rem 1rem;\n`;\n_c2 = ModalTitle;\nconst ModalForm = styled.form`\n  display: flex;\n  align-items: left;\n  justify-content: center;\n  flex-direction: column;\n  width: 95%;\n`;\n_c3 = ModalForm;\nconst ModalFormLabel = styled.label`\n  width: 80%;\n  display: flex;\n  justify-content: left;\n  margin: 0rem 1rem;\n  font-weight: bold;\n`;\n_c4 = ModalFormLabel;\nconst StatusText = styled.div`\n  display: flex;\n  justify-content: center;\n  font-size: 20px;\n  font-weight: bold;\n  width: 90%;\n  color: green;\n  margin: 1rem 0rem;\n`;\n_c5 = StatusText;\nconst ButtonGroupWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  width: 80%;\n  margin-top: 1rem;\n`;\n_c6 = ButtonGroupWrapper;\n\nconst EditMissionModal = ({\n  mission,\n  isOpen,\n  onClose\n}) => {\n  _s();\n\n  const [missionName, setMissionName] = useState(mission.missionName);\n  const [launchDate, setLaunchDate] = useState(mission.launchDate);\n  const [missionStatus, setMissionStatus] = useState(mission.missionStatus);\n  const [landingStatus, setLandingStatus] = useState(mission.landingStatus);\n  const [missionPatchSrc, setMissionPatchSrc] = useState(mission.missionPatchSrc);\n  const [completedRequest, setCompletedRequest] = useState(false);\n\n  const updateMission = async e => {\n    e.preventDefault();\n\n    try {\n      const body = {\n        missionName,\n        launchDate,\n        missionStatus,\n        landingStatus,\n        missionPatchSrc\n      };\n      const response = await fetch('http://localhost:5001/missions/' + mission.missionId, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n      response.status === 200 ? setCompletedRequest(true) : setCompletedRequest(false);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    style: modalStyle,\n    ariaHideApp: false,\n    children: /*#__PURE__*/_jsxDEV(ModalContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ModalTitle, {\n        children: \"Edit Mission\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalForm, {\n        children: [/*#__PURE__*/_jsxDEV(ModalFormLabel, {\n          children: \"Mission Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalInput, {\n          value: missionName,\n          onChange: e => setMissionName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFormLabel, {\n          children: \"Launch Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalInput, {\n          value: moment(launchDate).format('LL'),\n          onChange: e => setLaunchDate(new Date(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFormLabel, {\n          children: \"Mission Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalInput, {\n          value: missionStatus,\n          onChange: e => setMissionStatus(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFormLabel, {\n          children: \"Landing Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalInput, {\n          value: landingStatus,\n          onChange: e => setLandingStatus(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFormLabel, {\n          children: \"Mission Patch Source\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalInput, {\n          value: missionPatchSrc,\n          onChange: e => setMissionPatchSrc(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), completedRequest ? /*#__PURE__*/_jsxDEV(StatusText, {\n        children: \"Updated Mission\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 29\n      }, this) : null, /*#__PURE__*/_jsxDEV(ButtonGroupWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(ModalButton, {\n          onClick: e => updateMission(e),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalButton, {\n          onClick: onClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditMissionModal, \"59u31vlh8h2QVYvKXFikJXql0zI=\");\n\n_c7 = EditMissionModal;\nexport default EditMissionModal;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"ModalContainer\");\n$RefreshReg$(_c2, \"ModalTitle\");\n$RefreshReg$(_c3, \"ModalForm\");\n$RefreshReg$(_c4, \"ModalFormLabel\");\n$RefreshReg$(_c5, \"StatusText\");\n$RefreshReg$(_c6, \"ButtonGroupWrapper\");\n$RefreshReg$(_c7, \"EditMissionModal\");","map":{"version":3,"sources":["C:/Users/12039/Desktop/gitprojects/f9-booster-tracker/frontend/src/components/modals/EditMissionModal.tsx"],"names":["React","useState","styled","Modal","moment","ModalButton","ModalInput","modalStyle","ModalContainer","div","ModalTitle","ModalForm","form","ModalFormLabel","label","StatusText","ButtonGroupWrapper","EditMissionModal","mission","isOpen","onClose","missionName","setMissionName","launchDate","setLaunchDate","missionStatus","setMissionStatus","landingStatus","setLandingStatus","missionPatchSrc","setMissionPatchSrc","completedRequest","setCompletedRequest","updateMission","e","preventDefault","body","response","fetch","missionId","method","headers","JSON","stringify","status","error","console","message","target","value","format","Date"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,SAASC,UAAT,QAA2B,yBAA3B;AAQA,MAAMC,cAAc,GAAGN,MAAM,CAACO,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA,CANA;KAAMD,c;AAQN,MAAME,UAAU,GAAGR,MAAM,CAACO,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMC,U;AASN,MAAMC,SAAS,GAAGT,MAAM,CAACU,IAAK;AAC9B;AACA;AACA;AACA;AACA;AACA,CANA;MAAMD,S;AAQN,MAAME,cAAc,GAAGX,MAAM,CAACY,KAAM;AACpC;AACA;AACA;AACA;AACA;AACA,CANA;MAAMD,c;AAQN,MAAME,UAAU,GAAGb,MAAM,CAACO,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMM,U;AAUN,MAAMC,kBAAkB,GAAGd,MAAM,CAACO,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA,CANA;MAAMO,kB;;AAQN,MAAMC,gBAAiD,GAAG,CAAC;AACzDC,EAAAA,OADyD;AAEzDC,EAAAA,MAFyD;AAGzDC,EAAAA;AAHyD,CAAD,KAIpD;AAAA;;AACJ,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAASiB,OAAO,CAACG,WAAjB,CAA9C;AACA,QAAM,CAACE,UAAD,EAAaC,aAAb,IAA8BvB,QAAQ,CAAOiB,OAAO,CAACK,UAAf,CAA5C;AACA,QAAM,CAACE,aAAD,EAAgBC,gBAAhB,IAAoCzB,QAAQ,CAChDiB,OAAO,CAACO,aADwC,CAAlD;AAGA,QAAM,CAACE,aAAD,EAAgBC,gBAAhB,IAAoC3B,QAAQ,CAChDiB,OAAO,CAACS,aADwC,CAAlD;AAGA,QAAM,CAACE,eAAD,EAAkBC,kBAAlB,IAAwC7B,QAAQ,CACpDiB,OAAO,CAACW,eAD4C,CAAtD;AAGA,QAAM,CAACE,gBAAD,EAAmBC,mBAAnB,IAA0C/B,QAAQ,CAAU,KAAV,CAAxD;;AAEA,QAAMgC,aAAa,GAAG,MAAOC,CAAP,IAAkB;AACtCA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACF,YAAMC,IAAI,GAAG;AACXf,QAAAA,WADW;AAEXE,QAAAA,UAFW;AAGXE,QAAAA,aAHW;AAIXE,QAAAA,aAJW;AAKXE,QAAAA;AALW,OAAb;AAOA,YAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAC1B,oCAAoCpB,OAAO,CAACqB,SADlB,EAE1B;AACEC,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFX;AAGEL,QAAAA,IAAI,EAAEM,IAAI,CAACC,SAAL,CAAeP,IAAf;AAHR,OAF0B,CAA5B;AAQAC,MAAAA,QAAQ,CAACO,MAAT,KAAoB,GAApB,GACIZ,mBAAmB,CAAC,IAAD,CADvB,GAEIA,mBAAmB,CAAC,KAAD,CAFvB;AAGD,KAnBD,CAmBE,OAAOa,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAK,CAACE,OAApB;AACD;AACF,GAxBD;;AA0BA,sBACE,QAAC,KAAD;AAAO,IAAA,MAAM,EAAE5B,MAAf;AAAuB,IAAA,KAAK,EAAEZ,UAA9B;AAA0C,IAAA,WAAW,EAAE,KAAvD;AAAA,2BACE,QAAC,cAAD;AAAA,8BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAA,gCACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AACE,UAAA,KAAK,EAAEc,WADT;AAEE,UAAA,QAAQ,EAAGa,CAAD,IAAOZ,cAAc,CAACY,CAAC,CAACc,MAAF,CAASC,KAAV;AAFjC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAME,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE,QAAC,UAAD;AACE,UAAA,KAAK,EAAE7C,MAAM,CAACmB,UAAD,CAAN,CAAmB2B,MAAnB,CAA0B,IAA1B,CADT;AAEE,UAAA,QAAQ,EAAGhB,CAAD,IAAOV,aAAa,CAAC,IAAI2B,IAAJ,CAASjB,CAAC,CAACc,MAAF,CAASC,KAAlB,CAAD;AAFhC;AAAA;AAAA;AAAA;AAAA,gBAPF,eAWE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,eAYE,QAAC,UAAD;AACE,UAAA,KAAK,EAAExB,aADT;AAEE,UAAA,QAAQ,EAAGS,CAAD,IAAOR,gBAAgB,CAACQ,CAAC,CAACc,MAAF,CAASC,KAAV;AAFnC;AAAA;AAAA;AAAA;AAAA,gBAZF,eAgBE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF,eAiBE,QAAC,UAAD;AACE,UAAA,KAAK,EAAEtB,aADT;AAEE,UAAA,QAAQ,EAAGO,CAAD,IAAON,gBAAgB,CAACM,CAAC,CAACc,MAAF,CAASC,KAAV;AAFnC;AAAA;AAAA;AAAA;AAAA,gBAjBF,eAqBE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBF,eAsBE,QAAC,UAAD;AACE,UAAA,KAAK,EAAEpB,eADT;AAEE,UAAA,QAAQ,EAAGK,CAAD,IAAOJ,kBAAkB,CAACI,CAAC,CAACc,MAAF,CAASC,KAAV;AAFrC;AAAA;AAAA;AAAA;AAAA,gBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EA6BGlB,gBAAgB,gBAAG,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,GAA8C,IA7BjE,eA8BE,QAAC,kBAAD;AAAA,gCACE,QAAC,WAAD;AAAa,UAAA,OAAO,EAAGG,CAAD,IAAOD,aAAa,CAACC,CAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AAAa,UAAA,OAAO,EAAEd,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cA9BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CAnFD;;GAAMH,gB;;MAAAA,gB;AAqFN,eAAeA,gBAAf","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport Modal from 'react-modal'\nimport { Mission } from '../../model/Mission'\nimport moment from 'moment'\nimport { ModalButton } from '../styled/ModalButton'\nimport { ModalInput } from '../styled/ModalInput'\nimport { modalStyle } from '../../styles/modalStyle'\n\ninterface EditMissionModalProps {\n  mission: Mission\n  isOpen: boolean\n  onClose: () => void\n}\n\nconst ModalContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  width: 400px;\n`\n\nconst ModalTitle = styled.div`\n  display: flex;\n  justify-content: left;\n  font-size: 30px;\n  font-weight: bolder;\n  width: 90%;\n  margin: 1rem 1rem;\n`\n\nconst ModalForm = styled.form`\n  display: flex;\n  align-items: left;\n  justify-content: center;\n  flex-direction: column;\n  width: 95%;\n`\n\nconst ModalFormLabel = styled.label`\n  width: 80%;\n  display: flex;\n  justify-content: left;\n  margin: 0rem 1rem;\n  font-weight: bold;\n`\n\nconst StatusText = styled.div`\n  display: flex;\n  justify-content: center;\n  font-size: 20px;\n  font-weight: bold;\n  width: 90%;\n  color: green;\n  margin: 1rem 0rem;\n`\n\nconst ButtonGroupWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  width: 80%;\n  margin-top: 1rem;\n`\n\nconst EditMissionModal: React.FC<EditMissionModalProps> = ({\n  mission,\n  isOpen,\n  onClose,\n}) => {\n  const [missionName, setMissionName] = useState<string>(mission.missionName)\n  const [launchDate, setLaunchDate] = useState<Date>(mission.launchDate)\n  const [missionStatus, setMissionStatus] = useState<string>(\n    mission.missionStatus\n  )\n  const [landingStatus, setLandingStatus] = useState<string>(\n    mission.landingStatus\n  )\n  const [missionPatchSrc, setMissionPatchSrc] = useState<string>(\n    mission.missionPatchSrc\n  )\n  const [completedRequest, setCompletedRequest] = useState<boolean>(false)\n\n  const updateMission = async (e: any) => {\n    e.preventDefault()\n    try {\n      const body = {\n        missionName,\n        launchDate,\n        missionStatus,\n        landingStatus,\n        missionPatchSrc,\n      }\n      const response = await fetch(\n        'http://localhost:5001/missions/' + mission.missionId,\n        {\n          method: 'PUT',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(body),\n        }\n      )\n      response.status === 200\n        ? setCompletedRequest(true)\n        : setCompletedRequest(false)\n    } catch (error) {\n      console.error(error.message)\n    }\n  }\n\n  return (\n    <Modal isOpen={isOpen} style={modalStyle} ariaHideApp={false}>\n      <ModalContainer>\n        <ModalTitle>Edit Mission</ModalTitle>\n        <ModalForm>\n          <ModalFormLabel>Mission Name</ModalFormLabel>\n          <ModalInput\n            value={missionName}\n            onChange={(e) => setMissionName(e.target.value)}\n          />\n          <ModalFormLabel>Launch Date</ModalFormLabel>\n          <ModalInput\n            value={moment(launchDate).format('LL')}\n            onChange={(e) => setLaunchDate(new Date(e.target.value))}\n          />\n          <ModalFormLabel>Mission Status</ModalFormLabel>\n          <ModalInput\n            value={missionStatus}\n            onChange={(e) => setMissionStatus(e.target.value)}\n          />\n          <ModalFormLabel>Landing Status</ModalFormLabel>\n          <ModalInput\n            value={landingStatus}\n            onChange={(e) => setLandingStatus(e.target.value)}\n          />\n          <ModalFormLabel>Mission Patch Source</ModalFormLabel>\n          <ModalInput\n            value={missionPatchSrc}\n            onChange={(e) => setMissionPatchSrc(e.target.value)}\n          />\n        </ModalForm>\n        {completedRequest ? <StatusText>Updated Mission</StatusText> : null}\n        <ButtonGroupWrapper>\n          <ModalButton onClick={(e) => updateMission(e)}>Edit</ModalButton>\n          <ModalButton onClick={onClose}>Close</ModalButton>\n        </ButtonGroupWrapper>\n      </ModalContainer>\n    </Modal>\n  )\n}\n\nexport default EditMissionModal\n"]},"metadata":{},"sourceType":"module"}