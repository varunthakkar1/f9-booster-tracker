{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\12039\\\\Desktop\\\\gitprojects\\\\f9-booster-tracker\\\\frontend\\\\src\\\\pages\\\\MissionPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Button from '../components/Button';\nimport DeleteConfirmationModal from '../components/modals/DeleteConfirmationModal';\nimport EditMissionModal from '../components/modals/EditMissionModal';\nimport MissionCard from '../components/MissionCard';\nimport { TitleText } from '../components/styled/TitleText';\nconst Container = styled.div`\n  text-align: center;\n  justify-content: center;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n`;\n_c = Container;\nconst ButtonGroupWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 80%;\n  margin-bottom: 3rem;\n\n  @media screen and (max-width: 1010px) {\n    flex-direction: column;\n  }\n`;\n_c2 = ButtonGroupWrapper;\n\nconst MissionPage = () => {\n  _s();\n\n  const [mission, setMission] = useState();\n  const [editModalIsOpen, setEditModalIsOpen] = useState();\n  const [deleteModalIsOpen, setDeleteModalIsOpen] = useState(false);\n  let history = useHistory();\n  let {\n    id\n  } = useParams();\n\n  const toggleEditModal = () => {\n    setEditModalIsOpen(!editModalIsOpen);\n  };\n\n  const toggleDeleteConfirmationModal = () => {\n    setDeleteModalIsOpen(!deleteModalIsOpen);\n  };\n\n  const deleteMission = async (e) => {\n    try {\n      const url = 'http://localhost:5001/missions/' + id;\n      await fetch(url, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      history.push('/missions');\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    const getMission = async () => {\n      try {\n        const url = 'http://localhost:5001/missions/' + id;\n        const response = await fetch(url);\n        const jsonData = await response.json();\n        const retrievedData = jsonData[0];\n        const missionObject = {\n          missionId: retrievedData['missionId'],\n          missionName: retrievedData['missionName'],\n          launchDate: retrievedData['launchDate'],\n          boosterId: retrievedData['boosterId'],\n          missionStatus: retrievedData['missionStatus'],\n          landingStatus: retrievedData['landingStatus'],\n          missionPatchSrc: retrievedData['missionPatchSrc']\n        };\n        setMission(missionObject);\n      } catch (error) {\n        console.error(error.message);\n      }\n    };\n\n    getMission();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(TitleText, {\n      children: mission === null || mission === void 0 ? void 0 : mission.missionName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonGroupWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"edit\",\n        text: \"Mission\",\n        onClick: toggleEditModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"delete\",\n        text: \"Mission\",\n        onClick: toggleDeleteConfirmationModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), deleteModalIsOpen ? /*#__PURE__*/_jsxDEV(DeleteConfirmationModal, {\n      onConfirm: deleteMission,\n      isOpen: deleteModalIsOpen,\n      onClose: toggleDeleteConfirmationModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this) : null, editModalIsOpen ? /*#__PURE__*/_jsxDEV(EditMissionModal, {\n      mission: mission,\n      isOpen: editModalIsOpen,\n      onClose: toggleEditModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this) : null, mission ? /*#__PURE__*/_jsxDEV(MissionCard, {\n      mission: mission\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 18\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MissionPage, \"O0lKxl0HfIqp3/cfYq6WS16iRQc=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c3 = MissionPage;\nexport default MissionPage;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ButtonGroupWrapper\");\n$RefreshReg$(_c3, \"MissionPage\");","map":{"version":3,"sources":["C:/Users/12039/Desktop/gitprojects/f9-booster-tracker/frontend/src/pages/MissionPage.tsx"],"names":["React","useEffect","useState","useHistory","useParams","styled","Button","DeleteConfirmationModal","EditMissionModal","MissionCard","TitleText","Container","div","ButtonGroupWrapper","MissionPage","mission","setMission","editModalIsOpen","setEditModalIsOpen","deleteModalIsOpen","setDeleteModalIsOpen","history","id","toggleEditModal","toggleDeleteConfirmationModal","deleteMission","e","url","fetch","method","headers","push","error","console","message","getMission","response","jsonData","json","retrievedData","missionObject","missionId","missionName","launchDate","boosterId","missionStatus","landingStatus","missionPatchSrc"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Button from '../components/Button'\nimport DeleteConfirmationModal from '../components/modals/DeleteConfirmationModal'\nimport EditMissionModal from '../components/modals/EditMissionModal'\nimport MissionCard from '../components/MissionCard'\nimport { TitleText } from '../components/styled/TitleText'\nimport { Mission } from '../model/Mission'\n\ninterface MissionPageParams {\n  id: string\n}\n\nconst Container = styled.div`\n  text-align: center;\n  justify-content: center;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst ButtonGroupWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 80%;\n  margin-bottom: 3rem;\n\n  @media screen and (max-width: 1010px) {\n    flex-direction: column;\n  }\n`\n\nconst MissionPage: React.FC = () => {\n  const [mission, setMission] = useState<Mission>()\n  const [editModalIsOpen, setEditModalIsOpen] = useState<boolean>()\n  const [deleteModalIsOpen, setDeleteModalIsOpen] = useState<boolean>(false)\n  let history = useHistory()\n  let { id } = useParams<MissionPageParams>()\n\n  const toggleEditModal = () => {\n    setEditModalIsOpen(!editModalIsOpen)\n  }\n\n  const toggleDeleteConfirmationModal = () => {\n    setDeleteModalIsOpen(!deleteModalIsOpen)\n  }\n\n  const deleteMission = async (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => {\n    try {\n      const url = 'http://localhost:5001/missions/' + id\n      await fetch(url, {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/json' },\n      })\n      history.push('/missions')\n    } catch (error) {\n      console.error(error.message)\n    }\n  }\n\n  useEffect(() => {\n    const getMission = async () => {\n      try {\n        const url = 'http://localhost:5001/missions/' + id\n        const response = await fetch(url)\n        const jsonData = await response.json()\n        const retrievedData = jsonData[0]\n        const missionObject: Mission = {\n          missionId: retrievedData['missionId'],\n          missionName: retrievedData['missionName'],\n          launchDate: retrievedData['launchDate'],\n          boosterId: retrievedData['boosterId'],\n          missionStatus: retrievedData['missionStatus'],\n          landingStatus: retrievedData['landingStatus'],\n          missionPatchSrc: retrievedData['missionPatchSrc'],\n        }\n        setMission(missionObject)\n      } catch (error) {\n        console.error(error.message)\n      }\n    }\n\n    getMission()\n  }, [])\n\n  return (\n    <Container>\n      <TitleText>{mission?.missionName}</TitleText>\n      <ButtonGroupWrapper>\n        <Button type=\"edit\" text=\"Mission\" onClick={toggleEditModal} />\n        <Button\n          type=\"delete\"\n          text=\"Mission\"\n          onClick={toggleDeleteConfirmationModal}\n        />\n      </ButtonGroupWrapper>\n      {deleteModalIsOpen ? (\n        <DeleteConfirmationModal\n          onConfirm={deleteMission}\n          isOpen={deleteModalIsOpen}\n          onClose={toggleDeleteConfirmationModal}\n        />\n      ) : null}\n      {editModalIsOpen ? (\n        <EditMissionModal\n          mission={mission!}\n          isOpen={editModalIsOpen}\n          onClose={toggleEditModal}\n        />\n      ) : null}\n      {mission ? <MissionCard mission={mission} /> : null}\n    </Container>\n  )\n}\n\nexport default MissionPage\n"]},"metadata":{},"sourceType":"module"}